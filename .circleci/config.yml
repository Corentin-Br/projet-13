version: 2.1
orbs:
  python: circleci/python@1.2
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.8
        auth: 
          username: corbravo
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - restore_cache:
          key: v3-dependencies-{{ checksum "all_requirements.txt" }}
      - run: 
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r all_requirements.txt
      - save_cache:
          key: v3-dependencies-{{ checksum "all_requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Run tests
          command: | 
           . venv/bin/activate
           python manage.py test
          environment:
            - django_key: $django_key
            - debug: $debug
            - allowed_hosts: $allowed_hosts
      - run: 
          name: Linting
          command: |
            . venv/bin/activate
            flake8
  containerization:
    docker:
      - image: circleci/python:3.8
        auth:
         username: corbravo
         password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: create-image
          command: | 
            echo $DOCKERHUB_PASSWORD | docker login --username corbravo --password-stdin
            docker build -t oc-lettings .
            docker tag oc-lettings corbravo/oc-lettings:$CIRCLE_SHA1 
            docker tag oc-lettings corbravo/oc-lettings:latest
            docker image push corbravo/oc-lettings:$CIRCLE_SHA1
            docker image push corbravo/oc-lettings:latest
          environment:
            - django_key: $django_key
            - debug: $debug
            - allowed_hosts: $allowed_hosts
  deploy:
    docker:
      - image: circleci/python:3.8
        auth:
            username: corbravo
            password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
        # To be done
          name: do-nothing
          command:
            echo $DOCKERHUB_PASSWORD | docker login --username corbravo --password-stdin
    
      


workflows:
  sample:
    jobs:
      - build-and-test
      - containerization:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - containerization
          filters:
            branches:
              only: master
